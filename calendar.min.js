;(function(root,factory) {
	if (typeof define === 'function' && define.amd) {
        define(function () {
            return factory(root);
        });
    } else if (typeof exports === 'object') {
        module.exports = factory;
    } else {
        root.Calender = factory(root);
    }
})(window,function(window) {


    var calendarBox='<div class="laydate_top">'+
    '<a class="laydate_choose prev"><cite></cite></a><a class="laydate_choose" id="prev_year"><cite></cite></a>'+
    '<div class="laydate_top_center" id="laydate_YY"><span class="y"></span>年<span class="m"></span>月</div>'+
    '<a class="laydate_choose laydate_tab next"><cite></cite></a><a class="laydate_choose laydate_tab" id="next_year"><cite></cite></a></div>'+
    '<table class="laydate_table" id="laydate_table">'+
    '<thead><tr><th>日</th><th>一</th><th>二</th><th>三</th><th>四</th><th>五</th><th>六</th></tr></thead>'+
    '<tbody></tbody></table>'+
    '<div class="laydate_bottom"></div></div>';

    //当前时间
    var currentDate=new Date();
    var currentDateList={
        year:currentDate.getFullYear(),
        month:currentDate.getMonth()+1,
        day:currentDate.getDate()
    }

    var dateBox;

	function Calender(options){
		this._init(options);
	}

	Calender.prototype={
		_init:function(defaultOptions){
            dateBox = defaultOptions.elem;
			tools.setDate(currentDateList.year,currentDateList.month,currentDateList.day);
            // 初始化生成日历
            //创建元素
            var node=window.document.createElement('div');
            node.setAttribute("class", "laydate_box");
            //将日历模板添加到div元素中
            node.innerHTML=calendarBox;
            var ca=document.querySelector('.ca');
            ca.appendChild(node);
            var b = document.querySelector(dateBox);
            node.style.top = b.getBoundingClientRect().top+b.getBoundingClientRect().height+'px';
            node.style.left = b.getBoundingClientRect().left+'px';

            showCalendar(currentDateList.year,currentDateList.month-1,currentDateList.day,1);
            //事件
            this._event(defaultOptions.elem,'click',monitor,true);
            //上一月
            this._event('.prev','click',preMonth,true);
            // 下一月
            this._event('.next','click',nextMonth,true);
            //点击日期
            this._event('#laydate_table','click',dayOrMonth,true);
            //点击年份
            this._event('#laydate_YY','click',dayOrMonth,true);

            this._event('#prev_year','click',prevYear,true);
            this._event('#next_year','click',nextYear,true);
		}, 
        _event:function(el,et,fn,t) {
            document.querySelector(el).addEventListener(et,fn,t)
        },	
	}


    var tools = {
        setDate : function(y,m,d) { //设置时间
            // document.getElementById(dateBox).value=this.formatDate(y,m,d);
            this.getElem(dateBox).value = this.formatDate(y,m,d);
        },
        formatDate:function(y,m,d){ //日期格式
            return y+'年'+m+'月'+d+'日';
        },
        isLeapYear:function(y){ //判断闰年
            return y%400===0 || ( y%4 === 0 && y%100 !== 0);
        },
        firstDayToWeek:function(y,m){
        //判断某年某月的1号是星期几,getDay() 方法可返回表示星期的某一天的数字, 星期天为 0, 星期一为 1,以此类推
            return new Date(y,m,1).getDay();
        },
        daysForMonth:function(year,month){    //返回某年某月的天数
            var _month=month+1;
            return _month===2?(this.isLeapYear(year)?29:28):(_month%2===1&&_month<=7 || _month%2===0&&_month>=8?31:30);
        },
        getElem:function(el){ //获取dom元素
           return document.querySelector(el);
        },
        getOutValue:function(){//获取输入框的值
            var l = this.getElem(dateBox).value;
            //月
            var m = l.match(/(\d+)[^0-9]*(\d+)/)[2];
            //日
            var d = l.match(/(\d+)[^0-9]*$/)[1];
            return {
                month:m,
                day:d
            }
        },
        showOrHide:function(el,is){ // is 布尔值 true表示显示，false表示隐藏
            let show = 'block';
            if(is){
            }else{
                 show = 'none';
            }
            this.getElem(el).style.display = show;
        }
    }

    //显示整个日历
    function showCalendar(year,month,day,_dataMonth) {

        //设置头部的年月
        tools.getElem('#laydate_YY .y').innerHTML = year;
        tools.getElem('#laydate_YY .m').innerHTML = month+1;

        //设置整个天数部分
        let dayHtml = showDate(year,month,day,_dataMonth);
        tools.getElem('#laydate_table tbody').innerHTML = dayHtml;

        //设置输入框中的日期
        tools.setDate(year,month+1,day)
    }

    //监听元素
    function monitor() {
        tools.showOrHide('.laydate_box',true);
    }

    //显示日历中天数面板
    function showDate(year,month,day,_dataMonth) {
        let _month=parseInt(month);
        //星期几 
        var weekDay=tools.firstDayToWeek(year,_month);
        //这个月天数
        var dayNums = tools.daysForMonth(year,_month);
        //判断有多少行
        var dayRows = Math.ceil((dayNums-(6-weekDay))/7);

        //第一行
        var dayDate = '<tr>';

        //上一月的天数
        let lastDayNums = tools.daysForMonth(year,_month-1);

        //0-上一月 1-当月 2-下一月
        for (let i = 0,j=lastDayNums-weekDay+1; i < weekDay; i++,j++) {
            dayDate+='<td class="calendar_gray" data-month="0" data-x='+j+'>'+j+'</td>';
        }

        for (let i = 0,j=1; i < 7-weekDay; i++,j++) {
            // console.log('第一行:'+_dataMonth,i)
            if (_dataMonth==1&&i==day-1) {
                dayDate+='<td class="calendar_green" data-month="1" data-x='+j+'>'+j+'</td>';
            }else{
                dayDate+='<td data-month="1" data-x='+j+'>'+j+'</td>';
            }
        }
        dayDate += '</tr>';
        //剩下的
        let q=1;
        for (let t = 0,m=8-weekDay; t < 5; t++) {
            dayDate+='<tr>'
            for (let p = 0; p < 7; p++) {
                if (m>dayNums) {
                    if (_dataMonth==2) {
                        showDate(year,month+1,p,1)
                    }else{
                       dayDate+='<td class="calendar_gray" data-month="2" data-x='+q+'>'+q+'</td>';
                        q++; 
                    }
                }else{
                    if (m==day&&_dataMonth==1) {

                        dayDate+='<td class="calendar_green" data-month="1"  data-x='+m+'>'+m+'</td>';
                    }else{
                        dayDate+='<td  data-month="1" data-x='+m+'>'+m+'</td>';
                    }
                }
                m++;
            }
            dayDate += '</tr>';
        }
        q=0;
        return dayDate;
    }

    //点击日期或者年份
    function dayOrMonth(el) {
        var e=el.target;
        tools.showOrHide('.next',true);
        tools.showOrHide('.prev',true);
        tools.showOrHide('#prev_year',false);
        tools.showOrHide('#next_year',false);

        if (e.getAttribute('data-x')) { //点击日期
            //获取头部年月
            let _month=parseInt(tools.getElem('#laydate_YY .m').innerHTML)-1;
            let _year=parseInt(tools.getElem('#laydate_YY .y').innerHTML);
            
            var data_x=e.dataset.x;//点击的日期天
            var data_month=e.dataset.month; // 0 上一月 1-当前月 2-下一月

            //隐藏
            tools.showOrHide('.laydate_box',false);

            if (data_month==0) {//点击的是上一月的日期
                showCalendar(_year,_month-1,data_x,1);
            }else if(data_month==1){//点击的是当前月的日期
                showCalendar(_year,_month,data_x,1);
            }else{//点击的是下一月的日期
                showCalendar(_year,_month+1,data_x,1);
            }
        }else if (e.getAttribute('id')=='laydate_YY'||e.parentNode.getAttribute('id')=='laydate_YY') { //点击头部的年月，切换到月份显示
            showMonthHtml();
        }else if (e.getAttribute('class')=='laydate_month') { //点击月份
            //获取月份
            var data_m=parseInt(e.dataset.m);
            //获取当前头部显示的年份
            let y=parseInt(tools.getElem('#laydate_YY .y').innerHTML);
            //获取输入框的日期
            let _day = tools.getOutValue().day;
            //设置输入框的值
            tools.setDate(y,data_m+1,_day);
            //设置头部月份
            tools.getElem('#laydate_YY .m').innerHTML = data_m+1;
            //显示月份
            showCalendar(y,data_m,_day,1);
        }
    }

    function showMonthHtml(){
        //获取输入框中的日期并获取月份
        let _month = tools.getOutValue().month;

        var monthBox = '';
        arr = ['一月','二月','三月','四月','五月','六月','七月','八月','九月','十月','十一月','十二月'];
        for (let i = 0,k=0; i < 3; i++) {
            monthBox += '<tr>';
            for (let j = 0; j < 4; j++,k++) {
                if ((_month-1)==k) {
                    monthBox += '<td class="laydate_month calendar_green" data-m='+k+'>'+arr[k]+'</td>';
                }else{
                    monthBox += '<td class="laydate_month" data-m='+k+'>'+arr[k]+'</td>';
                }
            }
            monthBox += '</tr>';
        }
        //设置整个table
        tools.getElem('#laydate_table').innerHTML = monthBox;
        //点击月份
        tools.getElem('#laydate_table').addEventListener('click',dayOrMonth,true);
        //隐藏与显示
        tools.showOrHide('.next',false);
        tools.showOrHide('.prev',false);
        tools.showOrHide('#prev_year',true);
        tools.showOrHide('#next_year',true);
    }

    //上一月
    function preMonth() {
        //获取年月日
        let _month=parseInt(tools.getElem('#laydate_YY .m').innerHTML)-2;
        let _year=parseInt(tools.getElem('#laydate_YY .y').innerHTML);

        // let y=tools.getElem(dateBox).value;
        let _day=tools.getOutValue().d;

        if (_month<0) {
            _month=11;
            _year=_year-1;
        } 
        showCalendar(_year,_month,_day,1);
    }
    //下一月
    function nextMonth() {
        //获取年月日
        let _month=parseInt(tools.getElem('#laydate_YY .m').innerHTML);
        let _year=parseInt(tools.getElem('#laydate_YY .y').innerHTML);
        let y=tools.getElem(dateBox).value;
        let _day=y.match(/(\d+)[^0-9]*$/)[1];

        if (_month>11) {
            _month=0;
            _year=_year+1;
        }
        showCalendar(_year,_month,_day,1);
    }

    function prevYear() {
        let _year=parseInt(tools.getElem('#laydate_YY .y').innerHTML);
        _year-=1;
        tools.getElem('#laydate_YY .y').innerHTML=_year;
    }

    function nextYear() {
        let _year=parseInt(tools.getElem('#laydate_YY .y').innerHTML);
        _year+=1;
        tools.getElem('#laydate_YY .y').innerHTML=_year;
    }

	return Calender;
})